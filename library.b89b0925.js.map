{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,SAAUF,SAASC,cAAc,qBACjCE,KAAMH,SAASC,cAAc,qBAC7BG,gBAAiBJ,SAASC,cAAc,oBAGpB,IAAI,EAAAL,EAAAS,SAY1B,SAASC,IACP,GAAuB,YAyEDN,SAASC,cAAc,uBAExBM,UAAUC,SAAS,wBACpC,UACA,SA5EF,OAGF,MAAMC,EAAwBC,KAAKC,MAAMC,aAAaC,QAAQ,YAE9D,GAAIJ,GASN,SAAyBK,GACvBhB,EAAKK,KAAKY,UAAYD,EACnBE,KAAIC,IACH,IAAIC,EAAmBR,KAAKC,MAAMC,aAAaC,QAAQ,WAmC7CG,KAAIG,GACTA,EAAMC,OAFjB,IA2BsBC,EAzDhB,OAHIH,EAAQI,OAAS,IACnBJ,EAAU,CAACA,EAAQ,GAAIA,EAAQ,GAAI,UAE9B,gCAAgCD,EAAMM,eAAeN,EAAMM,gEAyDlDF,EAtDZJ,EAAMO,YAuDVH,EACK,uCAAuCA,IAEzC,sJAvD8BJ,EAAMQ,OAASR,EAAMG,kDAE9CF,EAAQQ,KAAK,OAAS,uFAGjBT,EAAMU,cAAgBV,EAAMW,gBAAkB,IAAIC,MACjD,EACA,IACG,2DAMlBH,KAAK,IAER,MAAMI,EAAc9B,SAASC,cAAc,gBAcZ8B,EAbH,UAcvBnB,aAAaC,QAAQkB,IAI0C,IAA7DrB,KAAKC,MAAMC,aAAaC,QAAQkB,IAAkBT,OAfvDQ,EAAYE,MAAMC,QAAU,OAF5BH,EAAYE,MAAMC,QAAU,QAYhC,IAAiCF,EAnD7BG,CAAgBzB,OACX,CACeT,SAASC,cAAc,gBAC/B+B,MAAMC,QAAU,QAC5BnC,EAAKK,KAAKY,UAAY,IAtB1BT,IAEAR,EAAKC,WAAWoC,iBAAiB,SAEjC,WACErC,EAAKI,SAASK,UAAU6B,OAAO,wBAC/BtC,EAAKC,WAAWQ,UAAU8B,IAAI,wBAC9B/B,OAuEoBN,SAASC,cAAc,WAC/BkC,iBAAiB,SAASG,IACtCC,YAAW,IAAMjC,KAAmB,Q","sources":["src/js/watched-button.js"],"sourcesContent":["// import { json } from 'stream/consumers';\nimport TopMovies from './work-with-api.js';\n\nconst refs = {\n  watchedBtn: document.querySelector('.header_btn-watched'),\n  queueBtn: document.querySelector('.header_btn-queue'),\n  list: document.querySelector('.movie-collection'),\n  addToWatchedBtn: document.querySelector('.modal__btn-add'),\n};\n\nconst topMoviesList = new TopMovies();\n\nonWatchedMarkup();\n\nrefs.watchedBtn.addEventListener('click', onWatchedBtnClick);\n\nfunction onWatchedBtnClick() {\n  refs.queueBtn.classList.remove('header-active-button');\n  refs.watchedBtn.classList.add('header-active-button');\n  onWatchedMarkup();\n}\n\nfunction onWatchedMarkup() {\n  if (getActiveTab() !== 'watched') {\n    return;\n  }\n\n  const filmsFromLocalStorage = JSON.parse(localStorage.getItem('watched'));\n\n  if (filmsFromLocalStorage) {\n    topMoviesMarkUp(filmsFromLocalStorage);\n  } else {\n    const placeholder = document.querySelector('.placeholder');\n    placeholder.style.display = 'block';\n    refs.list.innerHTML = '';\n  }\n}\n\nfunction topMoviesMarkUp(movies) {\n  refs.list.innerHTML = movies\n    .map(movie => {\n      let movie_g = getGenrs(JSON.parse(localStorage.getItem('genres')));\n      if (movie_g.length > 2) {\n        movie_g = [movie_g[0], movie_g[1], 'Other'];\n      }\n      return `<li class=\"movies__item\" id=\"${movie.id}\" data-id=${movie.id}>\n    <a href=\"\" class=\"movies__link\">\n        <img src='${checkImgLink(\n          movie.poster_path\n        )}' class=\"movie__image\" alt=\"Movie\">\n        <div class=\"movie__text-part\">\n            <h2 class=\"movie__title\">${movie.title || movie.name}</h2>\n            <p class=\"movie__genre\">${\n              movie_g.join(', ') || 'No data'\n            } <span class=\"stick\">|</span> \n                <span class=\"movie__year\">${\n                  (movie.release_date || movie.first_air_date || '').slice(\n                    0,\n                    4\n                  ) || 'No data'\n                }</span></p>\n        </div>\n    </a>\n</li>`;\n    })\n    .join('');\n\n  const placeholder = document.querySelector('.placeholder');\n  if (isLocalStorageItemEmpty('watched')) {\n    placeholder.style.display = 'block';\n  } else {\n    placeholder.style.display = 'none';\n  }\n}\n\nfunction getGenrs(genres) {\n  return genres.map(genre => {\n    return genre.name;\n  });\n}\n\nfunction isLocalStorageItemEmpty(localStorageKey) {\n  if (!localStorage.getItem(localStorageKey)) {\n    return true;\n  }\n\n  return JSON.parse(localStorage.getItem(localStorageKey)).length === 0;\n}\n\n//Rerender after delete movie\nconst btnAddToWatch = document.querySelector('.wached');\nbtnAddToWatch.addEventListener('click', e => {\n  setTimeout(() => onWatchedMarkup(), 100); //Dirty hack due to late work with localstorage\n});\n\nfunction getActiveTab() {\n  const watchedButton = document.querySelector('.header_btn-watched');\n\n  return watchedButton.classList.contains('header-active-button')\n    ? 'watched'\n    : 'queue';\n}\nfunction checkImgLink(data) {\n  if (data) {\n    return `https://image.tmdb.org/t/p/original/${data}`;\n  }\n  return `https://bflix.biz/no-poster.png`;\n}\n"],"names":["$aRcm3","parcelRequire","$3779d7cc7c8bc64f$var$refs","watchedBtn","document","querySelector","queueBtn","list","addToWatchedBtn","default","$3779d7cc7c8bc64f$var$onWatchedMarkup","classList","contains","filmsFromLocalStorage","JSON","parse","localStorage","getItem","movies","innerHTML","map","movie","movie_g","genre","name","data","length","id","poster_path","title","join","release_date","first_air_date","slice","placeholder","localStorageKey","style","display","$3779d7cc7c8bc64f$var$topMoviesMarkUp","addEventListener","remove","add","e","setTimeout"],"version":3,"file":"library.b89b0925.js.map"}